openapi: 3.0.3
info:
  title: People info
  version: 0.0.1

paths:
  /info:
    get:
      summary: Get information about the user
      parameters:
        - name: passportSerie
          in: query
          required: true
          schema:
            type: integer
        - name: passportNumber
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/People'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /list:
    get:
      summary: Get users
      parameters:
        - name: id
          in: query
          schema:
            type: integer
        - name: surname
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: patronymic
          in: query
          schema:
            type: string
        - name: address
          in: query
          schema:
            type: string
        - name: passportSerie
          in: query
          schema:
            type: integer
        - name: passportNumber
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:    
              schema:
                $ref: '#/components/schemas/UserList'
        '400':
          description: Bad request
        '500':
          description: Internal server error
        
components:
  schemas:
    People:
      required:
        - surname
        - name
        - address
      type: object
      properties:
        surname:
          type: string
          example: Иванов
        name:
          type: string
          example: Иван
        patronymic:
          type: string
          example: Иванович
        address:
          type: string
          example: г. Москва, ул. Ленина, д. 5, кв. 1

    UserList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/People'
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer